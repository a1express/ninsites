/*

	5. Header 

	Source: css/header.css 
	Description: handles header in all variations

*/

/* Header
---------------------------------------------------------------*/
.mainHeader  {
	width: 100%;
	position: absolute;
	background-color: inherit;
	transform: translateY(0);
	:any(.port, .topBarPort) {
		padding-right: $(pagePadding)px;
		padding-left: $(pagePadding)px;
	}
}

.menuPort  {
	font-family: $(menuFont);
	text-transform: uppercase;
	font-size: 14px;
}

/* Main header curve
---------------------------------------------------------------*/
.mainHeader .btCurveHeader, .mainHeader .btCurveHeader * {
	transform-style: preserve-3d;
	backface-visibility: hidden;
}

.mainHeader .btCurveHeader {
	display: block;
	position: absolute;
	width: 100%;
	.btCurveHolder {
		height: 20px;
		line-height: 20px;
		padding: 0 80px;
		margin: -5px auto 0;
		max-width: 1280px;
		.btSiteHeaderCurveSleeve {
			height: 20px;
			width: 100%;
		}
		.btCurveLeft, .btCurveRight {
			background: $(lightBgColor);
		}
	}
	.btCurveLeftHolder {
		float: left;
		margin-left: -80px;
	}
	.btCurveRightHolder {
		float: right;
		margin-right: -80px;
	}
}
.btBelowMenu {
	.mainHeader {
		.btCurveHeader {
			opacity: 0;
		}
	}
}
.btBelowMenu.btStickyHeaderActive {
	.mainHeader {
		.btCurveHeader {
			opacity: 1;
		}
	}
}

.btWithSidebar {
	.btCurveHeader { 
		display: none;
	}
}
:lightSkinSelector {
	.mainHeader .btCurveHolder {
		.btSiteHeaderCurveSleeve {
			background: $(lightBgColor);
		}
		.btCurveLeftFill, .btCurveRightFill, .btCurveLeft, .btCurveRight {
			fill: $(lightBgColor);
		}
	}
}
:darkSkinSelector {
	.mainHeader .btCurveHolder {
		.btSiteHeaderCurveSleeve {
			background: $(darkBgColor);
		}
		.btCurveLeftFill, .btCurveRightFill, .btCurveLeft, .btCurveRight {
			fill: $(darkBgColor);
		}
	}
}


.mainHeader.btDarkSkin, .btLightSkin .mainHeader.btDarkSkin {
	background-color: $(darkBgColor);
}
.mainHeader.btLightSkin, .btDarkSkin .mainHeader.btLightSkin {
	background-color: $(lightBgColor);
}

.btMenuGutter .mainHeader :any(.port, .topBarPort) {
    max-width: math(1200 - 2*$(pagePadding), px);
	margin: auto;
	padding-left: 0;
	padding-right: 0;
}

/* Below menu
---------------------------------------------------------------*/
.btBelowMenu:not(.btStickyHeaderActive) .mainHeader {
	background-color: transparent;
}

/* Main menu
---------------------------------------------------------------*/
.menuHolder {
    position: relative;
	padding: 15px 0;
}

/* Sticky header
---------------------------------------------------------------*/
body.btTopToolsInMenuArea:not(.btBelowMenu):not(.btStickyHeaderActive) .mainHeader {
	.menuHolder {
		padding: 20px 0 10px;
	}
}

.menuPort {
	nav ul {
		list-style: none;
		display: block;
		margin: 0;
		padding: 0;
		transition: all 360ms ease 0s;
		li {
			display: block;
			margin: 0;
			padding: 0;
			position: relative;
			a {
				display: block;
				position: relative;
				padding: 10px 15px;
				text-transform: uppercase;
			}
		}
		ul li {
			opacity: 0.97;
			margin: 0;
			a {
				text-transform: none;
			}
		}
		ul li:hover {
			opacity: 1;
		}
	}
	
	nav > ul > li > a {
		font-size: 14px;
		line-height: $(logoHeight)px;
		padding: 0;
		font-weight: 700;
	}

	nav ul ul li a {
		font-size: 12px;
		font-weight: 500;
		margin: 0;
		text-transform: uppercase;
	}
}

:darkSkinSelector .menuPort {
	 ul li a {
		color: $(darkFontColor);
	}	
	ul ul li {
		background-color: transparent;
		a {
			border-bottom: 1px solid $(darkBorderColor);
		}
	}	
}

:lightSkinSelector .menuPort {
	 ul li a {
		color: $(lighFontColor);
	}	
	ul ul li {
		background-color: $(lightBgColor);
		a {
			border-bottom: 1px solid $(lightBorderColor);
			font-weight: 600;
		}
	}
}

/* Skins
---------------------------------------------------------------*/
:darkSkinSelector ul li {
	a {
		color: $(darkFontColor);
		transition: all 300ms ease;
	}
	a:hover {
		color: $(darkSelectedMenuItem);
		transition: all 300ms ease;
	}
	ul li a {
		box-shadow: 0 0 0 $(darkBorderColor) inset;
		transition: all 300ms ease;
	}
	ul li a:hover {
		box-shadow: -5px 0 0 $(accentColor) inset;
		transition: all 300ms ease;
		padding-right: 20px; 
	}
}

:lightSkinSelector ul li {
	a {
		color: $(lightFontColor);
		transition: all 300ms ease;
	}
	a:hover {
		color: $(lightSelectedMenuItem);
		transition: all 300ms ease;
	}
	ul li a {
		box-shadow: 0 0 0 $(lightBorderColor) inset;
		transition: all 300ms ease;
	}
	ul li a:hover {
		box-shadow: -5px 0 0 $(accentColor) inset;
		transition: all 300ms ease;
		padding-right: 20px;
	}
}

:darkSkinSelector nav ul {
	:any(li.current-menu-ancestor, li.current-menu-item) > a {
		color: $(darkSelectedMenuItem);
		transition: all 300ms ease;
	}
	:any(li.current-menu-ancestor, li.current-menu-item) > a:hover {
		color: $(alternateColor);
		transition: all 300ms ease;
	}
}

:lightSkinSelector nav ul {
	:any(li.current-menu-ancestor, li.current-menu-item) > a {
		color: $(lightInactiveColor);
		transition: all 300ms ease;
	}
	:any(li.current-menu-ancestor, li.current-menu-item) > a:hover {
		color: $(alternateColor);
		transition: all 300ms ease;
	}
}


/* Logo and triggers
---------------------------------------------------------------*/
.menuHolder .logo {
    float: left;
}

.menuHolder .logo img {
    height: $(logoHeight)px;
    width: auto;
    display: block;
}

.menuHolder .logo img.btAltLogo {
	display: none;
}

.btHorizontalMenuTrigger {
	display: none;
	float: right;
	line-height: $(logoHeight)px;
}

/* Top bar
---------------------------------------------------------------*/
:any(.topBar, .topBarInMenu) {
	font-size: 13px;
	text-transform: none;
}

.topBarPort {
	padding-top: math($(innerVerticalPadding)/4, px);
	padding-bottom: math($(innerVerticalPadding)/4, px);
	border-bottom: 1px solid $(lightBorderColor);
}

:darkSkinSelector .topBarPort {
	border-bottom-color: $(darkBorderColor);
	a {
		color: #FFF;
	}
}

.topBarInMenu {
	line-height: inherit;
	float: right;
	display: table;
	height: $(logoHeight)px;
	margin-left: 20px;
	border: 0;
	padding: 0;
	.topBarInMenuCell {
		line-height: inherit;
		display: table-cell;
		vertical-align: middle;
	}
	.btIco span {
		display: inline-block;
		text-indent: -99999px;
		visibility: hidden;
		width: 0;
	}
	.btBtn a.btIcoHolder:before {
		margin-right: -10px;
		margin-left: -10px;
	}
}

.btStickyHeaderActive .topBarInMenu {
	height: auto;
	.topBarInMenuCell {
		.btIco.extrasmall, .btIco.extrasmall .btIcoHolder:before {
			line-height: math($(logoHeight)*0.66, px);
		}
	}
}

:any(.topBar, .menuPort .topBarInMenu) {
	.btIco .btIcoHolder:before {
		color: $(accentColorLight-9);
	}
}
:any(.topBar .topTools.ttRight, .menuPort .topBarInMenu) {
	.btIco .btIcoHolder:before {
		color: #818181;
	}
	.btTextRight .btIco {
		margin-left: 14px;
	}
}
:darkSkinSelector {
	:any(.topBar, .menuPort .topBarInMenu) {
		.btIco .btIcoHolder:before {
			color: $(darkFontColor);
		}
	}
	:any(.topBar a, .menuPort .topBarInMenu a, .topBar a:hover, .menuPort .topBarInMenu a:hover) {
		color: $(darkFontColor);
	}
	:any(.topBar .topTools.ttRight, .menuPort .topBarInMenu) {
		.btIco .btIcoHolder:before {
			color: $(darkFontColor);
		}
	}
}
:any(.topBar .topTools, .menuPort .topBarInMenu) {
	 .widget_search .btSearch .btIco.default .btIcoHolder:before {
		border: 0;
		color: $(accentColor);
	}
	.btBtn.btnFilled.btnAccentColor {
		font-size: 12px;
		margin-left: 14px;
		cursor: pointer;
		.btIco .btIcoHolder:before {
			color: #FFF;
		}
		.btIco .btIcoHolder:hover:before {
		}
	}
	.btBtn.btnIco  .btIco .btIcoHolder {
		padding: 0 15px;
	}
}

:darkSkinSelector {
	:any(.topBar .topTools, .menuPort .topBarInMenu) {
		 .widget_search .btSearch .btIco.default .btIcoHolder:before {
			color: $(darkFontColor);
		}
	}
}

:any(.topBar, .topBarInMenu) .widget_search {
	display: inline-block;
	h2 {
		display: none;
		font-size: inherit;
		font-family: $(bodyFont);
		margin: 0;
		padding: 0;
		clear: none;
		font-weight: normal;
		letter-spacing: 1px;
	}
	input {
		font-size: inherit;
		max-width: 150px;
		padding-left: 5px;
		clear: none;
		background: $(lightBgColor);
	}
	button {
		width: 23px;
		height: 23px;
		background: $(accentColor);
		border: 0;
		float: right;
		margin: 0;
		cursor: pointer;
	}
	button:before{
		font-family: FontAwesome;
		content: "\f002";
		display: inline-block;
		color: #FFF;
	}
	button:hover {
		background: $(accentColorLight-10);
	}
}

.btSearchInner.btFromTopBox {
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	width: 100%;
	background: $(accentColor);
	transform: translateY(-200%);
	transition: all 300ms ease;
	z-index: 99999;
	.btSearchInnerContent {
		margin: 0 auto;
		max-width: 1160px;
		position: relative;
	}
	form {
		padding: 20px 60px 20px 10px;
		text-align: center;
		position: relative;
	}
	.btSearchInnerClose {
		display: block;
		position: absolute;
		right: 0;
		top: 17px;
		cursor: pointer;
		.btIco {
			margin: 0;
		}
		.btIco.small .btIcoHolder:before {
			font: 60px/60px Icon7Stroke;
			color: #FFF;
			content: "\e680";
			width: 60px;
			height: 60px;
			transform: rotate(0);
		}
		.btIco:hover a.btIcoHolder:before {
			transform: rotate(180deg);
			opacity: 0.5;
		}
	}
	input[type="text"]{
		border-radius: 3px;
		border: 1px solid $(accentColorLight-9);
		background: #FFF;
		padding: 7px 50px 7px 20px;
		text-align: center;
		font-size: 22px;
		font-weight: 300;
		color: $(darkBgColor);
		box-shadow: none;
	}
	button {
		position: absolute;
		margin: 2px;
		right: 60px;
		top: 22px;
		border-radius: 0;
		width: 50px;
		height: 50px;
		background: transparent;
		border: 0;
		cursor: pointer;
	}
	button:before {
		font: 35px/30px Icon7Stroke;
		display: block;
		content: "\e618";
		color: $(alternateColor);
		font-weight: 900;
		transition: color 300ms ease;
	}
	button:hover:before {
		color: $(accentColor);
		transition: color 300ms ease;
	}
}
.btTopToolsSearchOpen .btSearchInner.btFromTopBox {
	transform: translateY(0);
	transition: all 300ms ease;
	box-shadow: 0 2px 5px rgba(0,0,0,0.2);
}

/* Responsive options
---------------------------------------------------------------*/
.subToggler {
	display: none !important;
	cursor: pointer;
	z-index: 5;
	position: absolute;
	top: 0;
	right: 0;
}
.subToggler.on, .current-menu-ancestor .subToggler {
	transform: rotateX(180deg);
}
.current-menu-ancestor .subToggler.on {
	transform: rotateX(0deg);
}

/* Dropdown, no need for override on responsive
---------------------------------------------------------------*/

body:not(.btMenuVerticalLeft):not(.btMenuVerticalRight) {

	.menuPort {
		> nav > ul > li {
			margin: 0 $(menuPadding)px 0 0;
		}

		> nav > ul > li:last-child {
			margin: 0;
		}

		ul ul {
			position: absolute;
			width: $(dropdownWidth);
			left: -20px;
			top: math($(logoHeight)-10, px);
			opacity: 0;
			transform: translateY(10px);
			box-shadow: 0 0px 3px rgba(0,0,0,0.25);
			border-radius: 2px;
			pointer-events: none;
			z-index: 1;
			li {
				z-index: 4;
				float: none;
			}
			/*li:first-child > a {
				border-top: 1px solid $(alternateColor);
				margin-top: 15px;
			}
			li ul li:first-child a {
				border-top: 1px solid $(alternateColor);
				margin-top: 15px;
			}
			li:last-child a {
				margin-bottom: 15px;
			}
			li:last-child ul li a {
				border-bottom: 1px solid $(lightBorderColor);
				margin-bottom: 0;
			}
			li:last-child ul li:last-child a {
				margin-bottom: 15px;
			}*/
			ul {
				display: block;
				top: 0px;
				left: auto;
				right: auto;
				margin: 0;
				pointer-events: none;
				z-index: 2;
				transform: translateX(-10px);
			}
		}
		ul li {
			float: left;
			position: relative;
			z-index: 5;
		}
		ul > li:hover > ul {
			opacity: 1;
			transform: translateY(0px);
			pointer-events: auto;
		}
		ul > li:hover > ul > li:hover > ul {
			opacity: 1;
			transform: translateX(0px);
			pointer-events: auto;
		}
	}
	@for i in range(0, 40) {
		ul ul li:nth-child(#(i)n) {
			z-index: math(40-#(i));
		}
	}
}

:lightSkinSelector .menuPort ul ul {
	background: $(lightBgColor);
}

:darkSkinSelector .menuPort ul ul {
	background: $(darkMenuBackground);
}

/* Menu positions
---------------------------------------------------------------*/

.btMenuRight {
	.menuPort nav {
		float: right;
	}
	.menuPort ul ul {
		text-align: right;
		right: -15px !important;
		left: auto !important;
	}
	.menuPort ul ul ul {
		right:  $(dropdownWidth) !important;
		left: auto !important;
	}
	.menuPort ul ul li {
		text-align: right;
	}
} 

.btMenuLeft {
	.menuPort nav {
		float: left;
		padding-left: 50px;
	}
	.menuPort ul ul {
		right: auto !important;
		left: -15px !important;
	}
	.menuPort ul ul ul {
		left: $(dropdownWidth) !important;
		right: auto !important;
	}
}

:lightSkinSelector.btMenuLeft {
	ul li ul li a:hover {
		box-shadow: 5px 0 0 $(accentColor) inset !important;
		transition: all 300ms ease;
		padding-left: 15px;
	}
}

:darkSkinSelector.btMenuLeft {
	ul li ul li a:hover {
		box-shadow: 5px 0 0 $(accentColor) inset !important;
		transition: all 300ms ease;
		padding-left: 15px;
	}
}

.btMenuCenter  {
	.logo {
		z-index: 8;
		float: left;
		margin: 0 0 0 50%;
	}
	.menuPort nav {
		float: none;
	}
	.menuPort .leftNav {
		position: absolute;
		right: 50%;
		left: 0;
		padding-right: $(menuPadding)px;
		ul {
			float: right;
		}
		ul ul {
			right: auto !important;
			left: -15px !important;
		}
		 ul ul ul {
			left: $(dropdownWidth) !important;
			right: auto !important;
		}
	}
	.menuPort .rightNav {
		position: absolute;
		left: 50%;
		right: 0;
		padding-left: $(menuPadding)px;
		ul ul {
			right: -15px !important;
			left: auto !important;
		}
		ul ul ul {
			right: $(dropdownWidth) !important;
			left: auto !important;
		}
		li {
			text-align: right;
		}
	}
}

:lightSkinSelector.btMenuCenter {
	.menuPort .leftNav ul li ul li a:hover {
		box-shadow: 5px 0 0 $(accentColor) inset !important;
		transition: all 300ms ease;
		padding-left: 15px;
	}
}
:darkSkinSelector.btMenuCenter {
	.menuPort .leftNav ul li ul li a:hover {
		box-shadow: 5px 0 0 $(accentColor) inset !important;
		transition: all 300ms ease;
		padding-left: 15px;
	}
}


/* Vertical and responsive menu
---------------------------------------------------------------*/
.btVerticalMenuTrigger, .btHorizontalMenuTrigger {
	display: none;
	position: relative;
	z-index: 1;
	line-height: $(logoHeight)px;
	.btIco.extrasmall .btIcoHolder:before {
		font-size: 28px;
	}
}
.btHorizontalMenuTrigger {
	margin-left: 20px;
	.btIco.extrasmall {
		margin-top: -7px;
	}
}

:any(.btMenuVerticalLeft, .btMenuVerticalRight) {
	
	.btVerticalMenuTrigger {
		display: block;		
	}
	
	.btCloseVertical {
		position: absolute;
		right: 15px;
		top: 33px;
		cursor: pointer;
	}
	.btCloseVertical:before {
		font-family: FontAwesome;
		content: '\f00d';
		color: $(accentColor);
		background: red;
	}


	.subToggler, .current-menu-ancestor .subToggler {
		display: inline-block !important;
	}

	.menuPort {
		/*top: math($(logoHeight) + 2*$(innerVerticalPadding), px);*/
		top: 0;
		bottom: 0;
		position: fixed;
		width: $(verticalMenuWidth)px;
		transform: translateX(0%);
		clear: both;
		transition: transform 0.5s ease-out-quint;
		z-index: 999;
		overflow:auto;
		font-size: 17px;
		.logo {
			padding: 20px;
			text-align: center;
			img.btMainLogo {
				width: 80%;
				margin: 0 auto;
			}
			img.btAltLogo {
				display: none;
			}
			.btMainLogo {
				display: block !important;
			}
			.btAltLogo {
				display: none !important;
			}
		}
	}

	.menuPort ul {
		padding: 0 $(pagePadding)px;
		a {
			line-height: math($(logoHeight)/1.25, px);
			transition: all 300ms ease;
		}
		a:hover {
			color: $(alternateColor);
			transition: all 300ms ease;
		}
		li .subToggler {
			padding: 0 0 0 10px;
			line-height: math($(logoHeight)/1.25, px);
			.btIcoHolder {
				padding: 0;
			}
			.btIcoHolder:before {
				color: $(alternateColor);
				line-height: 44px;
				height: 44px;
				transform: rotate(0);
			}
		}
	}
 
	.menuPort ul ul {
		display: none;
		padding: 0;
		margin-bottom: 30px;
		background: none;
		li {
			background: none;
			a {
				margin-right: 0;
				margin-left: 0;
				line-height: 30px;
				padding-left: 30px;
			}
			.subToggler  {
				.btIcoHolder {
					border: 0;
				}
			}
		}
		ul li a {
			padding-left: 50px;
		}
	}

	.menuPort ul ul.on, .menuPort ul li.current-menu-ancestor > ul  {
		display: block;
	}
	.menuPort ul li.current-menu-ancestor > ul.sub-menu.on  {
		display: none;
	}
}

:darkSkinSelector:any(.btMenuVerticalLeft, .btMenuVerticalRight) {
	.menuPort ul {
		li .subToggler {
			.btIcoHolder:before {
				color: $(darkFontColor);
			}
		}
	}
	:any(.btVerticalMenuTrigger, .btHorizontalMenuTrigger) {
		.btIco .btIcoHolder:before {
			color: $(darkFontColor);
		}
	}
}


.btMenuVerticalRight {
	.menuPort {
		right: 0;
		box-shadow: -2px 0 5px rgba(0,0,0,.10);
		transform: translateX(100%);
	}
	.btVerticalMenuTrigger {
		float: right;		
		margin-left: $(pagePadding)px;
	}
}

.btMenuVerticalLeft {
	.menuPort {
		left: 0;
		box-shadow: 2px 0 5px rgba(0,0,0,.10);
		transform: translateX(-100%);
	}
	.btVerticalMenuTrigger {
		float: left;
		margin-right: $(pagePadding)px;
	}
}
:any(.btMenuVerticalLeft.btMenuVerticalOn, .btMenuVerticalRight.btMenuVerticalOn) {
	 .topBar {
		border-bottom: 0;
		.topBarPort, {
			padding: 0;
			margin: 0;
		}
		:any(.ttLeft, .ttRight) {
			float: none;
			width: 100%;
			text-align: left;
		}
		.ttLeft .btIco {
			width: 100%;
			box-sizing: border-box;
			padding: math($(pagePadding)/4)px math($(pagePadding)/2)px;
			margin-right: 0;
		}
		.ttRight {
			padding-top: $(pagePadding)px;
		}
	}
	.topBarInMenu {
		padding: 0;
		margin: 0;
		float: none;
		width: 100%;
		.btBtn {
			padding: 0;
		}
	}
	a, a:hover {
		box-shadow: none;
	}
}

:lightSkinSelector:any(.btMenuVerticalLeft.btMenuVerticalOn, .btMenuVerticalRight.btMenuVerticalOn) {
	.topBar :any(.ttLeft, .ttRight) {
		border-top: 1px solid $(lightBorderColor);
	}
	.topBarInMenu {
		border-bottom: 1px solid $(lightBorderColor);
	}
}
:darkSkinSelector:any(.btMenuVerticalLeft.btMenuVerticalOn, .btMenuVerticalRight.btMenuVerticalOn) {
	.topBar :any(.ttLeft, .ttRight) {
		border-top: 1px solid $(darkBorderColor);
	}
	.topBarInMenu {
		border-bottom: 1px solid $(lightBorderColor);
	}
}

.btMenuVerticalOn .menuPort {
	transform: translateX(0);
	transition: transform 1s ease-out-quint;
}

.btMenuVerticalLeft.btMenuVerticalOn .btPageWrap {
	transform: translateX($(verticalMenuWidth)px);
}
.btMenuVerticalRight.btMenuVerticalOn .btPageWrap {
	transform: translateX(-$(verticalMenuWidth)px);
}

:any(.btMenuVerticalLeft.btDarkSkin, .btMenuVerticalRight.btDarkSkin) .menuPort {
	background-color: $(darkBgColorLight-4);
}

:any(.btMenuVerticalLeft.btLightSkin, .btMenuVerticalRight.btLightSkin)  .menuPort {
	background-color: $(lightBgColorLight-4);
}

/* Sticky header
---------------------------------------------------------------*/
body:not(.btMenuVerticalLeft):not(.btMenuVerticalRight).btStickyHeaderActive .mainHeader {
	position: fixed;
	opacity: 0.9;
	box-shadow: 0 2px 5px rgba(0,0,0,.25);
	transform: translateY(-100%);
	.menuHolder {
		padding: math($(menuVerticalPadding))px 0;
		margin-top: 0;
	}
	.menuPort {
		> nav > ul > li {
			margin: 0 $(menuPadding)px 0 0;
		}

		> nav > ul > li:last-child {
			margin: 0;
		}
	}
	.topBar {
		display: none;
	}
	.menuHolder .logo img {
		height: math($(logoHeight)*0.66, px);
	}
	.menuPort nav>ul>li>a {
		line-height: math($(logoHeight)*0.66, px);
	}
	.menuPort nav ul ul {
		top: math($(logoHeight)-25, px);
	}
	.menuPort nav ul ul ul {
		top: 0;
	}
	.btCurveHeader {
		display: none;
	}
}
body:not(.btMenuVerticalLeft):not(.btMenuVerticalRight).btStickyHeaderActive.btStickyHeaderOpen .mainHeader {
	transition: transform 0.5s ease-out-quint;
	transform: translateY(0);
}

/* Hide menu
---------------------------------------------------------------*/
body:not(.btMenuVerticalLeft ):not(.btMenuVerticalRight).btHideMenu {
	.btHorizontalMenuTrigger {
		display: block;
	}
	.menuHolder .menuPort {
		opacity: 0;
		pointer-events: none;
		transition: opacity 1s ease;
	}
	.menuHolder.btShowMenu .menuPort {
		pointer-events: all;
		opacity: 1;
	}
	.btMenuRight .menuHolder .menuPort {
		
	}
}